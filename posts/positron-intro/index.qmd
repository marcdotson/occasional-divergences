---
title: "Coding in R and Python with Positron"
author: "Marc Dotson"
date: "2024-07-31"
description: |
  Not too general, not too specific -- just right?
categories:
  - r
  - python
  - positron
# image: figures/positron-01.png
slug: positron-intro
---

I've been using RStudio since it was released. I have coded almost exclusively in R, so I personally haven't felt a need to use anything but RStudio. However, I've been picking up Python again, both in preparation for a new position and in recognition of a need to leverage the strengths of multiple programming languages. Using both R and Python has highlighted the need for a tool that can natively handle both.

While VS Code is often referenced as the go-to option, I've been reticent to adapt my data science work to a general code editor, in no small part because I heard rumors that Posit was making the leap to launch a multilingual IDE. And at the end of last month, Positron was quietly revealed, Posit's "next-generation data science IDE." Positron is built on VS Code's open source core, which means I finally need to migrate at least part of the way toward VS Code.

This post is for those who are considering Positron as an alternative to RStudio and VS Code, especially for those who code in both R and Python. As usual, this post is for me and is largely a study journal as I migrate to Positron. But if you, like me, feel like you're perpetually late to the party, hopefully you'll find this helpful as well as we play catch up together.

References:

- [Positron](https://github.com/posit-dev/positron)
- [James Balamuta](https://bsky.app/profile/coatless.bsky.social)
- [Josiah Perry](https://bsky.app/profile/josiahparry.bsky.social)
- [InfoWorld](https://www.infoworld.com/article/3715702/maker-of-rstudio-launches-new-r-and-python-ide.html)
- [VS Code not being open source](https://ghuntley.com/fracture/)
- [Code OSS](https://github.com/microsoft/vscode)
- [OpenVSX](https://open-vsx.org)

## Why use Positron instead of RStudio?

RStudio is great for:

- You're coding primarily in R.
- Even if you're coding in Python, but only secondarily.
- Have a visible Environment/Variable Explorer.
- Built-in File Explorer.

Why use Positron instead of RStudio?

- RStudio is getting dated.
- Coding in Python is only a secondary activity.
- Arguably a better integration with Git/GitHub?
- Get the benefits of VS Code without the bloat.

## Why use Positron instead of VS Code?

VS Code is great for:

- You're coding primarily in Python (or another, non-R language).
- You want to use GitHub Copilot, including its chat feature.
- Great general purpose text editor (light-weight in that sense).
- Remote work options/tunneling?
- Docker integration.
- Everyone else on your team is using it (so, same argument as Python).

Why use Positron instead of VS Code?

you use VS Code for data science (Python or R) but wish it included a dedicated console (you'd have to use Radian otherwise to get something like the console), variables pane, data explorer, and other affordances for your data-specific work.

- Coding in R isn't great with VS Code.
- Get the benefits of VS Code but with a focus on data science.
- Both R and Python work natively! No need to install extensions. Impressive new R extension/engine: [ARK](https://github.com/posit-dev/ark).
- Code execution works the same for both R and Python.
- VS Code is a code editor while Positron is an IDE.
- Has a native Environment/Data Explorer and Plot panel.
- Get the benefit of VS Code extensions (not marketplace though).

## How is Positron just right? Goldilocks/Three Bears.

From repo:

Positron has first-class, built-in support for R and/or Python via an integrated Console, with extensibility options for other languages in the future. This includes specialized views and panes throughout Positron such as a Data Explorer, Connections Pane, Variables Pane, and more.
Positron runs the interpreter separately from the IDE, so unlike in RStudio a crash in R/Python will not crash the IDE. It also means that you can swap between versions of your preferred language on the fly without a full reload of the IDE, just the integrated console.
Positron supports VS Code compatible extensions (.vsix files), allowing for the extensibility of capabilities beyond the core IDE itself. By building on Code OSS, Positron gets rich text editor capabilities and access to 1,000s of community extensions out of the box.
Positron is deeply focused on native data science workflows; it provides a batteries-included and cohesive experience beyond that of a general-purpose IDE or text editor such as VS Code.

- What's the difference between projects and folders?
- No need for RStudio Projects? Just Folders? What about here()?
- Working directory listed in the Console!

- Console *and* Runtime switcher.

- Option to add RStudio keymaps, customize keymapping.

- Cmd + Shift + P (Mac) or Ctrl + Shift + P (Windows) opens the Command Palette.
- Stacked Layout View.
= Cmd + K + T opens themes in the Command Palette.

- Console instead of just a Terminal?
- Variables/Environment natively plus Plots -- stuff specifically for data science.

- In-line help pop-ups, not just code completion.

- Plots from R and Python in the same pane.
- Plots panel includes a history that we can tab through.
- Plots panel can handle interactive plots.

Extensions:

- Material Theme (Material Theme Palenight High Contrast?)
- Toggle Light/Dark Theme
- Quarto
- Shiny (one extension for both R and Python)

What does Positron lack?

It's early days. The public beta just released.

- Still can’t tunnel via SSH to remote servers.
- Still can’t use Github Copilot.

## Final thoughts

Still in beta...

